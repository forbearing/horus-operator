---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "%s"
  namespace: "%s"
  labels:
    app.kubernetes.io/name: "horusctl"
    app.kubernetes.io/role: backup
    app.kubernetes.io/backup-tool: restic
    app.kubernetes.io/part-of: horus-operator
spec:
  schedule: "%s"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        metadata:
          labels:
            app.kubernetes.io/name: "horusctl"
            app.kubernetes.io/role: backup
            app.kubernetes.io/backup-tool: restic
            app.kubernetes.io/part-of: horus-operator
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: Never
          containers:
          - name: horusctl
            image: "%s"
            imagePullPolicy: Always
            command:
            - horusctl
            - backup
            - -- namespace %s 
            - '%s'
            env:
            - name: TZ
              value: "%s"
            - name: RESTIC_REPOSITORY
              value: "%s"
            - name: RESTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "%s"
                  key: RESTIC_PASSWORD
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "%s"
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "%s"
                  key: MINIO_SECRET_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "%s"
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "%s"
                  key: AWS_SECRET_ACCESS_KEY
            securityContext:
              privileged: true
            volumeMounts:
            - name: host-root
              mountPath: /host-root
              readOnly: true
          volumes:
          - name: host-root
            hostPath:
            - path: /
              type: Directory
