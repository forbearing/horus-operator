apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rest-server-data
  labels:
    app: rest-server
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: nfs-sc
  resources:
    requests:
      storage: 80Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rest-server
  labels:
    app: rest-server
spec:
  ports:
  - name: http
    port: 8000
    targetPort: http
  selector:
    app: rest-server
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-server
  labels:
    app: rest-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-server
  template:
    metadata:
      labels:
        app: rest-server
    spec:
      containers:
      - name: rest-server
        image: restic/rest-server
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
        livenessProbe:
          tcpSocket:
            port: http
          timeoutSeconds: 3
          periodSeconds: 30
          failureThreshold: 4
        readinessProbe:
          tcpSocket:
            port: http
          timeoutSeconds: 3
          periodSeconds: 5
          failureThreshold: 20
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: rest-server-data
